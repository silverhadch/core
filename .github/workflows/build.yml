# Fork of https://github.com/Vanilla-OS/core-image/blob/main/.github/workflows/vib-build.yml.

name: build-image
on:
  push:
    branches:
      - main
      - dev
    paths-ignore:
      - "**.md"
  pull_request:
  workflow_dispatch:

env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build:
    name: Build and push image
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout Push to Registry action
        uses: actions/checkout@v4

      - uses: actions/upload-artifact@v4
        with:
          name: Containerfile
          path: Containerfile

      - name: Generate image name
        run: |
          REPO_OWNER_LOWERCASE="$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')"
          echo "REPO_OWNER_LOWERCASE=$REPO_OWNER_LOWERCASE" >> "$GITHUB_ENV"
          echo "IMAGE_NAME=ghcr.io/$REPO_OWNER_LOWERCASE/core" >> "$GITHUB_ENV"

      - name: Set BUILD_DATE
        run: echo "BUILD_DATE=$(date -u +%Y/%m/%d)" >> "$GITHUB_ENV"

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{raw}}
            type=semver,pattern=v{{major}}
            type=ref,event=branch

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Package Registry
        uses: docker/login-action@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push the Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Containerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          provenance: false
          build-args: |
            BUILD_DATE=${{ env.BUILD_DATE }}
